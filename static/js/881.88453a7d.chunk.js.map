{"version":3,"file":"static/js/881.88453a7d.chunk.js","mappings":"sQAAA,IAAMA,EAAW,gCACXC,EAAa,mCAENC,EAAc,SAAAC,GAS1B,OARaC,MAAM,GAAD,OACdJ,EADc,8BACgBG,EADhB,8DAC2EF,IAC3FI,MAAK,SAAAC,GACN,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAED,EAEYC,EAAY,SAAAC,GAOxB,OANaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,2CAA+DZ,IAAcI,MAAK,SAAAC,GACnG,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAED,EAEYG,EAAoB,SAAAD,GAOhC,OANaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,mCAAuDZ,IAAcI,MAAK,SAAAC,GAC3F,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAED,EAEYI,EAAe,SAAAF,GAS3B,OARaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,kDAAsEZ,IAAcI,MACrG,SAAAC,GACC,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAGF,EAEYK,EAAsB,WAOlC,OANaZ,MAAM,GAAD,OAAIJ,EAAJ,qDAAyDC,IAAcI,MAAK,SAAAC,GAC7F,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAED,C,0GCtDD,EAA6B,2B,SCIvBM,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAClBC,GAAYD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAuCvB,EArCe,WACd,OAA0BE,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMtB,EAAQqB,EAAaE,IAAI,SAC/B,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KAuBA,OAhBAC,EAAAA,EAAAA,YAAU,WACT,GAAc,OAAV1B,EAGH,OAFAmB,GAAS,QACTM,EAAU,KAGX1B,EAAAA,EAAAA,IAAYC,GAAOE,MAAK,SAAAyB,GACvBF,EAAUE,EAAMC,SAChBT,GAAS,GAEoB,IAAzBQ,EAAMC,QAAQC,QACjBV,GAAS,EAEV,GACD,GAAE,CAACnB,KAGH,iBAAK8B,UAAWC,EAAhB,WACC,SAACf,EAAD,CAAWgB,OAvBE,SAAAL,GACdM,QAAQC,IAAIP,GAEZL,EAAgB,CAAEtB,MAAO2B,GACzB,IAoBET,IAAS,wDACV,SAACJ,EAAD,CAAYU,OAAQA,MAGtB,C","sources":["API/FetchMovies.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst MY_API_KEY = \"4acb178a3b7e23750170cd51a9ede7a5\";\n\nexport const fetchMovies = query => {\n\tconst resp = fetch(\n\t\t`${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${MY_API_KEY}`,\n\t).then(response => {\n\t\tif (response.ok) {\n\t\t\treturn response.json();\n\t\t}\n\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t});\n\treturn resp;\n};\n\nexport const fetchCast = movieId => {\n\tconst resp = fetch(`${BASE_URL}movie/${movieId}/credits?language=en-US&api_key=${MY_API_KEY}`).then(response => {\n\t\tif (response.ok) {\n\t\t\treturn response.json();\n\t\t}\n\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t});\n\treturn resp;\n};\n\nexport const fetchMoveiDetails = movieId => {\n\tconst resp = fetch(`${BASE_URL}movie/${movieId}?language=en-US&api_key=${MY_API_KEY}`).then(response => {\n\t\tif (response.ok) {\n\t\t\treturn response.json();\n\t\t}\n\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t});\n\treturn resp;\n};\n\nexport const fetchRewiews = movieId => {\n\tconst resp = fetch(`${BASE_URL}movie/${movieId}/reviews?language=en-US&page=1&api_key=${MY_API_KEY}`).then(\n\t\tresponse => {\n\t\t\tif (response.ok) {\n\t\t\t\treturn response.json();\n\t\t\t}\n\t\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t\t},\n\t);\n\treturn resp;\n};\n\nexport const fetchTrendingMovies = () => {\n\tconst resp = fetch(`${BASE_URL}trending/movie/day?language=en-US&api_key=${MY_API_KEY}`).then(response => {\n\t\tif (response.ok) {\n\t\t\treturn response.json();\n\t\t}\n\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t});\n\treturn resp;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"MoviesForm\":\"Movies_MoviesForm__jenk-\"};","import { useState, useEffect, lazy } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { fetchMovies } from \"API/FetchMovies\";\nimport css from \"./Movies.module.css\";\n\nconst MoviesList = lazy(() => import(\"pages/MoviesList\"));\nconst Searchbar = lazy(() => import(\"components/Searchbar/Searchbar\"));\n\nconst Movies = () => {\n\tconst [error, setError] = useState(false);\n\n\tconst [searchParams, setSearchParams] = useSearchParams();\n\tconst query = searchParams.get(\"query\");\n\tconst [movies, setMovies] = useState([]);\n\n\tconst submit = films => {\n\t\tconsole.log(films);\n\n\t\tsetSearchParams({ query: films });\n\t};\n\tuseEffect(() => {\n\t\tif (query === null) {\n\t\t\tsetError(false);\n\t\t\tsetMovies([]);\n\t\t\treturn;\n\t\t}\n\t\tfetchMovies(query).then(films => {\n\t\t\tsetMovies(films.results);\n\t\t\tsetError(false);\n\n\t\t\tif (films.results.length === 0) {\n\t\t\t\tsetError(true);\n\t\t\t}\n\t\t});\n\t}, [query]);\n\n\treturn (\n\t\t<div className={css.MoviesForm}>\n\t\t\t<Searchbar Submit={submit} />\n\t\t\t{error && <h1>Ups.. We found no resolts.</h1>}\n\t\t\t<MoviesList movies={movies} />\n\t\t</div>\n\t);\n};\n\nexport default Movies;\n"],"names":["BASE_URL","MY_API_KEY","fetchMovies","query","fetch","then","response","ok","json","Promise","reject","Error","fetchCast","movieId","fetchMoveiDetails","fetchRewiews","fetchTrendingMovies","MoviesList","lazy","Searchbar","useState","error","setError","useSearchParams","searchParams","setSearchParams","get","movies","setMovies","useEffect","films","results","length","className","css","Submit","console","log"],"sourceRoot":""}