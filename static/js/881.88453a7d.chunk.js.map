{"version":3,"file":"static/js/881.88453a7d.chunk.js","mappings":"sQAAA,IAAMA,EAAW,gCACXC,EAAa,mCAGNC,EAAc,SAACC,GAUxB,OATaC,MAAM,GAAD,OAAIJ,EAAJ,8BAAkCG,EAAlC,8DAA6FF,IAC1GI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,EAEYC,EAAY,SAACC,GAUtB,OATaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,2CAA+DZ,IAC5EI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,EAEYG,EAAoB,SAACD,GAU9B,OATaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,mCAAuDZ,IACpEI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,EAEYI,EAAe,SAACF,GAUzB,OATaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,kDAAsEZ,IACnFI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,EAEYK,EAAsB,WAU/B,OATaZ,MAAM,GAAD,OAAIJ,EAAJ,qDAAyDC,IACtEI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,C,0GClED,EAA6B,2B,SCIvBM,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAClBC,GAAYD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IA6CvB,EA3Ce,WAEb,OAA0BE,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMtB,EAAQqB,EAAaE,IAAI,SAC/B,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KA4BA,OArBAC,EAAAA,EAAAA,YAAU,WAER,GAAc,OAAV1B,EAGF,OAFAmB,GAAS,QACTM,EAAU,KAGZ1B,EAAAA,EAAAA,IAAYC,GACTE,MAAK,SAAAyB,GACJF,EAAUE,EAAMC,SACdT,GAAS,GAEkB,IAAzBQ,EAAMC,QAAQC,QAChBV,GAAS,EAEZ,GAEJ,GAAE,CAACnB,KAIG,iBAAK8B,UAAWC,EAAhB,WAEL,SAACf,EAAD,CAAWgB,OA5BE,SAACL,GACdM,QAAQC,IAAIP,GAEbL,EAAgB,CAAEtB,MAAO2B,GAC3B,IAyBIT,IAAS,wDACV,SAACJ,EAAD,CAAYU,OAAQA,MAGvB,C","sources":["API/FetchMovies.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst MY_API_KEY = '4acb178a3b7e23750170cd51a9ede7a5';\n\n\nexport const fetchMovies = (query) => {\n    const resp = fetch(`${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n};\n\nexport const fetchCast = (movieId) => {\n    const resp = fetch(`${BASE_URL}movie/${movieId}/credits?language=en-US&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n}\n\nexport const fetchMoveiDetails = (movieId) => {\n    const resp = fetch(`${BASE_URL}movie/${movieId}?language=en-US&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n}\n\nexport const fetchRewiews = (movieId) => {\n    const resp = fetch(`${BASE_URL}movie/${movieId}/reviews?language=en-US&page=1&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n}\n\nexport const fetchTrendingMovies = () => {\n    const resp = fetch(`${BASE_URL}trending/movie/day?language=en-US&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"MoviesForm\":\"Movies_MoviesForm__jenk-\"};","import {  useState, useEffect, lazy } from \"react\";\nimport { useSearchParams} from \"react-router-dom\";\nimport { fetchMovies } from 'API/FetchMovies'\nimport css from './Movies.module.css';\n\nconst MoviesList = lazy(() => import('pages/MoviesList'))\nconst Searchbar = lazy(() => import('components/Searchbar/Searchbar'))\n\nconst Movies = () => {\n  \n  const [error, setError] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n  const [movies, setMovies] = useState([]);\n  \n  const submit = (films) => {\n    console.log(films);\n    \n   setSearchParams({ query: films })\n}\n  useEffect(() => {\n    \n    if (query === null) {\n      setError(false)\n      setMovies([])\n      return;\n    }\n    fetchMovies(query)\n      .then(films => {\n        setMovies(films.results)\n          setError(false)\n          \n        if (films.results.length === 0) {\n          setError(true)\n        }\n      })\n      \n  }, [query]);\n\n\n    \n  return <div className={css.MoviesForm}>\n    \n    <Searchbar Submit={submit} />\n    {error && <h1>Ups.. We found no resolts.</h1>} \n    <MoviesList movies={movies}/>\n      \n  </div>\n};\n\nexport default Movies;"],"names":["BASE_URL","MY_API_KEY","fetchMovies","query","fetch","then","response","ok","json","Promise","reject","Error","fetchCast","movieId","fetchMoveiDetails","fetchRewiews","fetchTrendingMovies","MoviesList","lazy","Searchbar","useState","error","setError","useSearchParams","searchParams","setSearchParams","get","movies","setMovies","useEffect","films","results","length","className","css","Submit","console","log"],"sourceRoot":""}