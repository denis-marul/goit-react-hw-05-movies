{"version":3,"file":"static/js/848.01fa049c.chunk.js","mappings":"sQAAA,IAAMA,EAAW,gCACXC,EAAa,mCAGNC,EAAc,SAACC,GAUxB,OATaC,MAAM,GAAD,OAAIJ,EAAJ,8BAAkCG,EAAlC,8DAA6FF,IAC1GI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,EAEYC,EAAY,SAACC,GAUtB,OATaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,2CAA+DZ,IAC5EI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,EAEYG,EAAoB,SAACD,GAU9B,OATaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,mCAAuDZ,IACpEI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,EAEYI,EAAe,SAACF,GAUzB,OATaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,kDAAsEZ,IACnFI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,EAEYK,EAAsB,WAU/B,OATaZ,MAAM,GAAD,OAAIJ,EAAJ,qDAAyDC,IACtEI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,C,8ECpCD,UA3BgB,WACZ,OAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GAASC,EAAAA,EAAAA,MASf,OAPAC,EAAAA,EAAAA,YAAU,YACNP,EAAAA,EAAAA,IAAaK,EAAOP,SAASR,MAAK,SAAAkB,GAC9BJ,EAAWI,EACd,GACJ,GAAE,CAACH,KAGG,yBACFF,EAAQM,SAAsC,IAA3BN,EAAQM,QAAQC,QAChC,sEACA,wBAAKP,EAAQM,SAAWN,EAAQM,QAAQE,KAAI,SAAAC,GAC1C,OAAO,2BACL,sCAAcA,EAAOC,eAAeC,aACpC,oCAAYF,EAAOG,aAFLH,EAAOI,GAI5B,OAKR,C","sources":["API/FetchMovies.jsx","components/Rewiews/Rewiews.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst MY_API_KEY = '4acb178a3b7e23750170cd51a9ede7a5';\n\n\nexport const fetchMovies = (query) => {\n    const resp = fetch(`${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n};\n\nexport const fetchCast = (movieId) => {\n    const resp = fetch(`${BASE_URL}movie/${movieId}/credits?language=en-US&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n}\n\nexport const fetchMoveiDetails = (movieId) => {\n    const resp = fetch(`${BASE_URL}movie/${movieId}?language=en-US&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n}\n\nexport const fetchRewiews = (movieId) => {\n    const resp = fetch(`${BASE_URL}movie/${movieId}/reviews?language=en-US&page=1&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n}\n\nexport const fetchTrendingMovies = () => {\n    const resp = fetch(`${BASE_URL}trending/movie/day?language=en-US&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n}\n\n","import { useParams } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport {fetchRewiews} from 'API/FetchMovies';\n\nconst Rewiews = () => {\n    const [rewiews, setRewiews] = useState([]);\n\n    const params = useParams();\n\n    useEffect(() => {\n        fetchRewiews(params.movieId).then(resp => {\n            setRewiews(resp);\n        })\n    }, [params])\n\n  \n    return <div>\n        {rewiews.results && rewiews.results.length === 0 ?\n            <p>We don't have any rewiews for this movie.</p> :\n            <ul>{rewiews.results && rewiews.results.map(result =>\n            { return <li key={result.id}>\n                <p>Username: {result.author_details.username}</p>\n                <p>Rewiew: {result.content}</p>\n            </li>\n        })}</ul>}\n        \n    </div>\n  \n    \n};\n\nexport default Rewiews;\n"],"names":["BASE_URL","MY_API_KEY","fetchMovies","query","fetch","then","response","ok","json","Promise","reject","Error","fetchCast","movieId","fetchMoveiDetails","fetchRewiews","fetchTrendingMovies","useState","rewiews","setRewiews","params","useParams","useEffect","resp","results","length","map","result","author_details","username","content","id"],"sourceRoot":""}