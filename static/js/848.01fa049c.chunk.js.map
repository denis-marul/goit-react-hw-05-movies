{"version":3,"file":"static/js/848.01fa049c.chunk.js","mappings":"sQAAA,IAAMA,EAAW,gCACXC,EAAa,mCAENC,EAAc,SAAAC,GAS1B,OARaC,MAAM,GAAD,OACdJ,EADc,8BACgBG,EADhB,8DAC2EF,IAC3FI,MAAK,SAAAC,GACN,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAED,EAEYC,EAAY,SAAAC,GAOxB,OANaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,2CAA+DZ,IAAcI,MAAK,SAAAC,GACnG,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAED,EAEYG,EAAoB,SAAAD,GAOhC,OANaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,mCAAuDZ,IAAcI,MAAK,SAAAC,GAC3F,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAED,EAEYI,EAAe,SAAAF,GAS3B,OARaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,kDAAsEZ,IAAcI,MACrG,SAAAC,GACC,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAGF,EAEYK,EAAsB,WAOlC,OANaZ,MAAM,GAAD,OAAIJ,EAAJ,qDAAyDC,IAAcI,MAAK,SAAAC,GAC7F,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAED,C,8ECnBD,UAhCgB,WACf,OAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GAASC,EAAAA,EAAAA,MAQf,OANAC,EAAAA,EAAAA,YAAU,YACTP,EAAAA,EAAAA,IAAaK,EAAOP,SAASR,MAAK,SAAAkB,GACjCJ,EAAWI,EACX,GACD,GAAE,CAACH,KAGH,yBACEF,EAAQM,SAAsC,IAA3BN,EAAQM,QAAQC,QACnC,sEAEA,wBACEP,EAAQM,SACRN,EAAQM,QAAQE,KAAI,SAAAC,GACnB,OACC,2BACC,sCAAcA,EAAOC,eAAeC,aACpC,oCAAYF,EAAOG,aAFXH,EAAOI,GAKjB,OAKN,C","sources":["API/FetchMovies.jsx","components/Rewiews/Rewiews.jsx"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst MY_API_KEY = \"4acb178a3b7e23750170cd51a9ede7a5\";\n\nexport const fetchMovies = query => {\n\tconst resp = fetch(\n\t\t`${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${MY_API_KEY}`,\n\t).then(response => {\n\t\tif (response.ok) {\n\t\t\treturn response.json();\n\t\t}\n\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t});\n\treturn resp;\n};\n\nexport const fetchCast = movieId => {\n\tconst resp = fetch(`${BASE_URL}movie/${movieId}/credits?language=en-US&api_key=${MY_API_KEY}`).then(response => {\n\t\tif (response.ok) {\n\t\t\treturn response.json();\n\t\t}\n\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t});\n\treturn resp;\n};\n\nexport const fetchMoveiDetails = movieId => {\n\tconst resp = fetch(`${BASE_URL}movie/${movieId}?language=en-US&api_key=${MY_API_KEY}`).then(response => {\n\t\tif (response.ok) {\n\t\t\treturn response.json();\n\t\t}\n\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t});\n\treturn resp;\n};\n\nexport const fetchRewiews = movieId => {\n\tconst resp = fetch(`${BASE_URL}movie/${movieId}/reviews?language=en-US&page=1&api_key=${MY_API_KEY}`).then(\n\t\tresponse => {\n\t\t\tif (response.ok) {\n\t\t\t\treturn response.json();\n\t\t\t}\n\t\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t\t},\n\t);\n\treturn resp;\n};\n\nexport const fetchTrendingMovies = () => {\n\tconst resp = fetch(`${BASE_URL}trending/movie/day?language=en-US&api_key=${MY_API_KEY}`).then(response => {\n\t\tif (response.ok) {\n\t\t\treturn response.json();\n\t\t}\n\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t});\n\treturn resp;\n};\n","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchRewiews } from \"API/FetchMovies\";\n\nconst Rewiews = () => {\n\tconst [rewiews, setRewiews] = useState([]);\n\n\tconst params = useParams();\n\n\tuseEffect(() => {\n\t\tfetchRewiews(params.movieId).then(resp => {\n\t\t\tsetRewiews(resp);\n\t\t});\n\t}, [params]);\n\n\treturn (\n\t\t<div>\n\t\t\t{rewiews.results && rewiews.results.length === 0 ? (\n\t\t\t\t<p>We don't have any rewiews for this movie.</p>\n\t\t\t) : (\n\t\t\t\t<ul>\n\t\t\t\t\t{rewiews.results &&\n\t\t\t\t\t\trewiews.results.map(result => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={result.id}>\n\t\t\t\t\t\t\t\t\t<p>Username: {result.author_details.username}</p>\n\t\t\t\t\t\t\t\t\t<p>Rewiew: {result.content}</p>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Rewiews;\n"],"names":["BASE_URL","MY_API_KEY","fetchMovies","query","fetch","then","response","ok","json","Promise","reject","Error","fetchCast","movieId","fetchMoveiDetails","fetchRewiews","fetchTrendingMovies","useState","rewiews","setRewiews","params","useParams","useEffect","resp","results","length","map","result","author_details","username","content","id"],"sourceRoot":""}