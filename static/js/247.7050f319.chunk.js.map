{"version":3,"file":"static/js/247.7050f319.chunk.js","mappings":"sQAAA,IAAMA,EAAW,gCACXC,EAAa,mCAENC,EAAc,SAAAC,GAS1B,OARaC,MAAM,GAAD,OACdJ,EADc,8BACgBG,EADhB,8DAC2EF,IAC3FI,MAAK,SAAAC,GACN,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAED,EAEYC,EAAY,SAAAC,GAOxB,OANaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,2CAA+DZ,IAAcI,MAAK,SAAAC,GACnG,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAED,EAEYG,EAAoB,SAAAD,GAOhC,OANaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,mCAAuDZ,IAAcI,MAAK,SAAAC,GAC3F,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAED,EAEYI,EAAe,SAAAF,GAS3B,OARaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,kDAAsEZ,IAAcI,MACrG,SAAAC,GACC,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAGF,EAEYK,EAAsB,WAOlC,OANaZ,MAAM,GAAD,OAAIJ,EAAJ,qDAAyDC,IAAcI,MAAK,SAAAC,GAC7F,OAAIA,EAASC,GACLD,EAASE,OAEVC,QAAQC,OAAO,IAAIC,MAAM,8BAChC,GAED,C,uFCnBD,UA/Ba,WACZ,OAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,GAASC,EAAAA,EAAAA,MAOf,OANAC,EAAAA,EAAAA,YAAU,YACTV,EAAAA,EAAAA,GAAUQ,EAAOP,SAASR,MAAK,SAAAkB,GAC9BJ,EAAQI,EAAOL,KACf,GACD,GAAE,CAACE,KAGH,wBACEF,GACAA,EAAKM,KAAI,SAAAC,GACR,OACC,2BACC,gBACCC,MAAM,MACNC,OAAO,MACPC,IAAKH,EAAMI,aAAe,kCAAoCJ,EAAMI,aAAeC,EACnFC,IAAKN,EAAMO,iBAEZ,uBAAIP,EAAMQ,QACV,uCAAeR,EAAMS,eARbT,EAAMU,UAWhB,KAGJ,C","sources":["API/FetchMovies.jsx","components/Cast/Cast.jsx"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst MY_API_KEY = \"4acb178a3b7e23750170cd51a9ede7a5\";\n\nexport const fetchMovies = query => {\n\tconst resp = fetch(\n\t\t`${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${MY_API_KEY}`,\n\t).then(response => {\n\t\tif (response.ok) {\n\t\t\treturn response.json();\n\t\t}\n\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t});\n\treturn resp;\n};\n\nexport const fetchCast = movieId => {\n\tconst resp = fetch(`${BASE_URL}movie/${movieId}/credits?language=en-US&api_key=${MY_API_KEY}`).then(response => {\n\t\tif (response.ok) {\n\t\t\treturn response.json();\n\t\t}\n\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t});\n\treturn resp;\n};\n\nexport const fetchMoveiDetails = movieId => {\n\tconst resp = fetch(`${BASE_URL}movie/${movieId}?language=en-US&api_key=${MY_API_KEY}`).then(response => {\n\t\tif (response.ok) {\n\t\t\treturn response.json();\n\t\t}\n\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t});\n\treturn resp;\n};\n\nexport const fetchRewiews = movieId => {\n\tconst resp = fetch(`${BASE_URL}movie/${movieId}/reviews?language=en-US&page=1&api_key=${MY_API_KEY}`).then(\n\t\tresponse => {\n\t\t\tif (response.ok) {\n\t\t\t\treturn response.json();\n\t\t\t}\n\t\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t\t},\n\t);\n\treturn resp;\n};\n\nexport const fetchTrendingMovies = () => {\n\tconst resp = fetch(`${BASE_URL}trending/movie/day?language=en-US&api_key=${MY_API_KEY}`).then(response => {\n\t\tif (response.ok) {\n\t\t\treturn response.json();\n\t\t}\n\t\treturn Promise.reject(new Error(\"No results has been found.\"));\n\t});\n\treturn resp;\n};\n","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchCast } from \"API/FetchMovies\";\nimport thumbnail from \"DefaultPics/default-thumbnail.jpg\";\n\nconst Cast = () => {\n\tconst [cast, setCast] = useState([]);\n\n\tconst params = useParams();\n\tuseEffect(() => {\n\t\tfetchCast(params.movieId).then(actors => {\n\t\t\tsetCast(actors.cast);\n\t\t});\n\t}, [params]);\n\n\treturn (\n\t\t<ul>\n\t\t\t{cast &&\n\t\t\t\tcast.map(actor => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={actor.credit_id}>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\twidth=\"300\"\n\t\t\t\t\t\t\t\theight=\"450\"\n\t\t\t\t\t\t\t\tsrc={actor.profile_path ? \"https://image.tmdb.org/t/p/w500\" + actor.profile_path : thumbnail}\n\t\t\t\t\t\t\t\talt={actor.original_name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<p>{actor.name}</p>\n\t\t\t\t\t\t\t<p>Character: {actor.character}</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t</ul>\n\t);\n};\n\nexport default Cast;\n"],"names":["BASE_URL","MY_API_KEY","fetchMovies","query","fetch","then","response","ok","json","Promise","reject","Error","fetchCast","movieId","fetchMoveiDetails","fetchRewiews","fetchTrendingMovies","useState","cast","setCast","params","useParams","useEffect","actors","map","actor","width","height","src","profile_path","thumbnail","alt","original_name","name","character","credit_id"],"sourceRoot":""}