{"version":3,"file":"static/js/247.7050f319.chunk.js","mappings":"sQAAA,IAAMA,EAAW,gCACXC,EAAa,mCAGNC,EAAc,SAACC,GAUxB,OATaC,MAAM,GAAD,OAAIJ,EAAJ,8BAAkCG,EAAlC,8DAA6FF,IAC1GI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,EAEYC,EAAY,SAACC,GAUtB,OATaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,2CAA+DZ,IAC5EI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,EAEYG,EAAoB,SAACD,GAU9B,OATaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,mCAAuDZ,IACpEI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,EAEYI,EAAe,SAACF,GAUzB,OATaT,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBa,EAArB,kDAAsEZ,IACnFI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,EAEYK,EAAsB,WAU/B,OATaZ,MAAM,GAAD,OAAIJ,EAAJ,qDAAyDC,IACtEI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,C,uFCrCD,UAzBa,WACT,OAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAGMC,GAASC,EAAAA,EAAAA,MAOf,OANAC,EAAAA,EAAAA,YAAU,YACNV,EAAAA,EAAAA,GAAUQ,EAAOP,SAASR,MAAK,SAAAkB,GAC3BJ,EAAQI,EAAOL,KAClB,GACJ,GAAE,CAACE,KAEG,wBACFF,GAAQA,EAAKM,KAAI,SAAAC,GACd,OAAO,2BACH,gBAAKC,MAAM,MACPC,OAAO,MACPC,IAAKH,EAAMI,aAAe,kCAAoCJ,EAAMI,aAAeC,EACnFC,IAAKN,EAAMO,iBACf,uBAAIP,EAAMQ,QACV,uCAAeR,EAAMS,eANTT,EAAMU,UAQzB,KAER,C","sources":["API/FetchMovies.jsx","components/Cast/Cast.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst MY_API_KEY = '4acb178a3b7e23750170cd51a9ede7a5';\n\n\nexport const fetchMovies = (query) => {\n    const resp = fetch(`${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n};\n\nexport const fetchCast = (movieId) => {\n    const resp = fetch(`${BASE_URL}movie/${movieId}/credits?language=en-US&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n}\n\nexport const fetchMoveiDetails = (movieId) => {\n    const resp = fetch(`${BASE_URL}movie/${movieId}?language=en-US&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n}\n\nexport const fetchRewiews = (movieId) => {\n    const resp = fetch(`${BASE_URL}movie/${movieId}/reviews?language=en-US&page=1&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n}\n\nexport const fetchTrendingMovies = () => {\n    const resp = fetch(`${BASE_URL}trending/movie/day?language=en-US&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n}\n\n","import { useParams } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport { fetchCast } from 'API/FetchMovies';\nimport  thumbnail  from 'DefaultPics/default-thumbnail.jpg';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n\n   \n    const params = useParams()\n    useEffect(() => {\n        fetchCast(params.movieId).then(actors => {\n            setCast(actors.cast);\n        })\n    }, [params])\n\n    return <ul >\n        {cast && cast.map(actor => {\n            return <li key={actor.credit_id}>\n                <img width=\"300\"\n                    height=\"450\"\n                    src={actor.profile_path ? 'https://image.tmdb.org/t/p/w500' + actor.profile_path : thumbnail}\n                    alt={actor.original_name} />\n                <p>{actor.name}</p>\n                <p>Character: {actor.character}</p>\n            </li>\n        })}\n    </ul>\n};\n\nexport default Cast;"],"names":["BASE_URL","MY_API_KEY","fetchMovies","query","fetch","then","response","ok","json","Promise","reject","Error","fetchCast","movieId","fetchMoveiDetails","fetchRewiews","fetchTrendingMovies","useState","cast","setCast","params","useParams","useEffect","actors","map","actor","width","height","src","profile_path","thumbnail","alt","original_name","name","character","credit_id"],"sourceRoot":""}