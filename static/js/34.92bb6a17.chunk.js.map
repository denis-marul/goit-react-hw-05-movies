{"version":3,"file":"static/js/34.92bb6a17.chunk.js","mappings":"+MACA,MAA6B,2BAA7B,EAAsE,4BAAtE,EAAiH,6B,SCI3GA,GAAmBC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAwE9B,EAtEe,WAEb,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAyC/B,OAlBAC,EAAAA,EAAAA,YAAU,WACR,GAAc,OAAVF,EAGF,OAFAJ,GAAS,QACTF,EAAU,KCpCD,SAAqBM,GAUhC,OATaG,MAAM,GAAD,OALL,iCAKK,OAHF,eAGE,kBAAoCH,EAApC,8DAJH,qCAKVI,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,GAER,ED4BGC,CAAYX,GACTI,MAAK,SAAAQ,GACJlB,EAAUkB,EAAMC,SAChBjB,GAAS,GACoB,IAAzBgB,EAAMC,QAAQC,QAChBlB,GAAS,EAEZ,GACJ,GAAE,CAACI,KAIG,iBAAKe,UAAWC,EAAhB,WACL,kBAAMC,SA9BS,SAAAC,GAEf,GADAA,EAAEC,iBACuB,KAArB5B,EAAU6B,OAGZ,OAFAC,MAAM,iCACNzB,GAAS,GAGXG,EAAgB,CAAEC,MAAOT,IACzBC,EAAa,GACd,EAqBC,WACE,kBACEuB,UAAWC,EACXM,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOnC,EACPoC,SA7CwB,SAAAT,GAE5B,IAAQQ,EAAUR,EAAEU,cAAZF,MACRlC,EAAakC,EAAMG,cACpB,KA2CG,mBAAQd,UAAWC,EAAkBM,KAAK,SAA1C,uBAED3B,IAAS,wDAEP,SAAC,EAAAmC,SAAD,CAAUC,UAAU,sCAApB,UACK,SAAC3C,EAAD,CAAkBK,OAAQA,QAIrC,C","sources":["webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx","API/FetchMovies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MoviesForm\":\"Movies_MoviesForm__v+0mN\",\"MoviesInput\":\"Movies_MoviesInput__D3qNZ\",\"MoviesButton\":\"Movies_MoviesButton__ZpeA1\"};","import { useEffect, useState, lazy, Suspense } from \"react\";\nimport { useSearchParams} from \"react-router-dom\";\nimport FetchMovies from 'API/FetchMovies'\nimport css from './Movies.module.css';\n\nconst SearchMoviesList = lazy(() => import('./SearchMoviesList'))\n\nconst Movies = () => {\n    \n  const [movieText, setMovieText] = useState('')\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n  \n  \n \n\n  const handleMovieTextChange = e => {\n         \n    const { value } = e.currentTarget;\n    setMovieText(value.toLowerCase())\n  };\n  \n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (movieText.trim() === '') {\n      alert('Please fill in the form.');\n      setError(false)\n      return;\n    }\n    setSearchParams({ query: movieText })\n    setMovieText('')\n  };\n\n  useEffect(() => {\n    if (query === null) {\n      setError(false)\n      setMovies([])\n      return;\n    }\n    FetchMovies(query)\n      .then(films => {\n        setMovies(films.results)\n        setError(false)\n        if (films.results.length === 0) {\n          setError(true)\n        }\n      })\n  }, [query]);\n\n\n    \n  return <div className={css.MoviesForm}>\n    <form onSubmit={onSubmit}>\n      <input\n        className={css.MoviesInput}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={movieText}\n        onChange={handleMovieTextChange}\n      />\n      <button className={css.MoviesButton} type=\"submit\">Search</button>\n    </form>\n    {error && <h1>Ups.. We found no resolts.</h1>}\n       \n       <Suspense fallback={<p>Loading...</p>} >\n            <SearchMoviesList movies={movies} />\n       </Suspense>\n    \n  </div>\n};\n\nexport default Movies;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst MY_API_KEY = '4acb178a3b7e23750170cd51a9ede7a5';\nconst SEARCH_TYPE = 'search/movie';\n\nexport default function fetchMovies(query) {\n    const resp = fetch(`${BASE_URL}${SEARCH_TYPE}?query=${query}&include_adult=false&language=en-US&page=1&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n}"],"names":["SearchMoviesList","lazy","useState","movieText","setMovieText","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetch","then","response","ok","json","Promise","reject","Error","FetchMovies","films","results","length","className","css","onSubmit","e","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","Suspense","fallback"],"sourceRoot":""}