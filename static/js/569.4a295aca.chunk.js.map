{"version":3,"file":"static/js/569.4a295aca.chunk.js","mappings":"kNACA,MAA2B,uB,SC0B3B,EAtBa,WACT,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAGMC,GAASC,EAAAA,EAAAA,MAOf,OANAC,EAAAA,EAAAA,YAAU,WCNC,IAAmBC,KDOhBH,EAAOG,QCNRC,MAAM,GAAD,OALL,iCAKK,OAHF,QAGE,YAA8BD,EAA9B,2CAJH,qCAKVE,MAAK,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,OACX,IAAIC,MAAM,8BAEhB,KDFyBN,MAAK,SAAAO,GAC3Bb,EAAQa,EAAOd,KAClB,GACJ,GAAE,CAACE,KAEG,eAAIa,UAAWC,EAAf,SACFhB,GAAQA,EAAKiB,KAAI,SAAAC,GACd,OAAO,0BACFA,EAAMC,eAAgB,gBAAKC,MAAM,MAAMC,OAAO,MAAMC,IAAK,kCAAoCJ,EAAMC,aAAcI,IAAKL,EAAMM,iBAC7H,uBAAIN,EAAMO,QACV,uCAAeP,EAAMQ,eAHTR,EAAMS,UAKzB,KAER,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","API/FetchCast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"CastList\":\"Cast_CastList__2oQ+0\"};","import { useParams } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport FetchCast from 'API/FetchCast';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n\n   \n    const params = useParams()\n    useEffect(() => {\n        FetchCast(params.movieId).then(actors => {\n            setCast(actors.cast);\n        })\n    }, [params])\n\n    return <ul className={css.CastList}>\n        {cast && cast.map(actor => {\n            return <li key={actor.credit_id}>\n                {actor.profile_path && <img width=\"300\" height=\"450\" src={'https://image.tmdb.org/t/p/w500' + actor.profile_path} alt={actor.original_name} />}\n                <p>{actor.name}</p>\n                <p>Character: {actor.character}</p>\n            </li>\n        })}\n    </ul>\n};\n\nexport default Cast;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst MY_API_KEY = '4acb178a3b7e23750170cd51a9ede7a5';\nconst SEARCH_TYPE = 'movie';\n\nexport default function FetchCast(movieId) {\n    const resp = fetch(`${BASE_URL}${SEARCH_TYPE}/${movieId}/credits?language=en-US&api_key=${MY_API_KEY}`)\n        .then(response => {\n           if (response.ok) {\n               return response.json();\n           }\n           return Promise.reject(\n               new Error(\"No results has been found.\"),\n           );\n        })\n    return resp;\n}"],"names":["useState","cast","setCast","params","useParams","useEffect","movieId","fetch","then","response","ok","json","Promise","reject","Error","actors","className","css","map","actor","profile_path","width","height","src","alt","original_name","name","character","credit_id"],"sourceRoot":""}